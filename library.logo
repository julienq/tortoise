; COMBINE thing1 thing2
;   if thing2 is a word, outputs WORD thing1 thing2.  If thing2 is a list,
;   outputs FPUT thing1 thing2.
TO COMBINE :thing1 :thing2
  IFELSE WORD? :thing1 [WORD :thing1 :thing2] [FPUT :thing1 :thing2]
END

; IGNORE value
;   command.  Does nothing.  Used when an expression is evaluated for
;   a side effect and its actual value is unimportant.
TO IGNORE :value
END

; LOCALMAKE varname value
;   command.  Makes the named variable local, like LOCAL, and
;   assigns it the given value, like MAKE.
TO LOCALMAKE :varname :value
  LOCAL :varname
  MAKE :varname :value
END

; NAME value varname
;   command.  Same as MAKE but with the inputs in reverse order.
TO NAME :value :varname
  MAKE :varname :value
END


; Aliases
COPYDEF "BF "BUTFIRST
COPYDEF "BL "BUTLAST
COPYDEF "EMPTY? "EMPTYP
COPYDEF "EQUAL? "EQUALP
COPYDEF "GREATER? "GREATERP
COPYDEF "GREATEREQUAL? "GREATEREQUALP
COPYDEF "IFF "IFFALSE
COPYDEF "IFT "IFTRUE
COPYDEF "LESS? "LESSP
COPYDEF "LESSEQUAL? "LESSEQUALP
COPYDEF "LIST? "LISTP
COPYDEF "NOTEQUAL? "NOTEQUALP
COPYDEF "OP "OUTPUT
COPYDEF "PO "PRINTOUT
COPYDEF "PR "PRINT
COPYDEF "RL "READLIST
COPYDEF "SE "SENTENCE
COPYDEF "WORD? "WORDP


; The welcome message shows up when the library is loaded
PR [Tortoise Logo v0.0.8 (https://github.com/julienq/tortoise)]
PR [Welcome to Logo]
